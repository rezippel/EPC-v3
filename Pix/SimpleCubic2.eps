%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 288 288
%%Creator: Mathematica
%%CreationDate: Mon Oct 12 15:06:01 EDT 1992
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803  
MathPictureStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.1 0.309017 0.0515028 [
[(-4)] .1  .30902  0 2 Msboxa
[(-2)] .3  .30902  0 2 Msboxa
[(2)] .7  .30902  0 2 Msboxa
[(4)] .9  .30902  0 2 Msboxa
[(-6)] .4875  0 1 0 Msboxa
[(-4)] .4875  .10301  1 0 Msboxa
[(-2)] .4875  .20601  1 0 Msboxa
[(2)] .4875  .41202  1 0 Msboxa
[(4)] .4875  .51503  1 0 Msboxa
[(6)] .4875  .61803  1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903  0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002  w
.1  .30902  m
.1  .31527  L
s
P
[(-4)] .1  .30902  0 2 Mshowa
p
.002  w
.3  .30902  m
.3  .31527  L
s
P
[(-2)] .3  .30902  0 2 Mshowa
p
.002  w
.7  .30902  m
.7  .31527  L
s
P
[(2)] .7  .30902  0 2 Mshowa
p
.002  w
.9  .30902  m
.9  .31527  L
s
P
[(4)] .9  .30902  0 2 Mshowa
p
.001  w
.14  .30902  m
.14  .31277  L
s
P
p
.001  w
.18  .30902  m
.18  .31277  L
s
P
p
.001  w
.22  .30902  m
.22  .31277  L
s
P
p
.001  w
.26  .30902  m
.26  .31277  L
s
P
p
.001  w
.34  .30902  m
.34  .31277  L
s
P
p
.001  w
.38  .30902  m
.38  .31277  L
s
P
p
.001  w
.42  .30902  m
.42  .31277  L
s
P
p
.001  w
.46  .30902  m
.46  .31277  L
s
P
p
.001  w
.54  .30902  m
.54  .31277  L
s
P
p
.001  w
.58  .30902  m
.58  .31277  L
s
P
p
.001  w
.62  .30902  m
.62  .31277  L
s
P
p
.001  w
.66  .30902  m
.66  .31277  L
s
P
p
.001  w
.74  .30902  m
.74  .31277  L
s
P
p
.001  w
.78  .30902  m
.78  .31277  L
s
P
p
.001  w
.82  .30902  m
.82  .31277  L
s
P
p
.001  w
.86  .30902  m
.86  .31277  L
s
P
p
.001  w
.06  .30902  m
.06  .31277  L
s
P
p
.001  w
.02  .30902  m
.02  .31277  L
s
P
p
.001  w
.94  .30902  m
.94  .31277  L
s
P
p
.001  w
.98  .30902  m
.98  .31277  L
s
P
p
.002  w
0 .30902  m
1 .30902  L
s
P
p
.002  w
.5  0 m
.50625  0 L
s
P
[(-6)] .4875  0 1 0 Mshowa
p
.002  w
.5  .10301  m
.50625  .10301  L
s
P
[(-4)] .4875  .10301  1 0 Mshowa
p
.002  w
.5  .20601  m
.50625  .20601  L
s
P
[(-2)] .4875  .20601  1 0 Mshowa
p
.002  w
.5  .41202  m
.50625  .41202  L
s
P
[(2)] .4875  .41202  1 0 Mshowa
p
.002  w
.5  .51503  m
.50625  .51503  L
s
P
[(4)] .4875  .51503  1 0 Mshowa
p
.002  w
.5  .61803  m
.50625  .61803  L
s
P
[(6)] .4875  .61803  1 0 Mshowa
p
.001  w
.5  .0206  m
.50375  .0206  L
s
P
p
.001  w
.5  .0412  m
.50375  .0412  L
s
P
p
.001  w
.5  .0618  m
.50375  .0618  L
s
P
p
.001  w
.5  .0824  m
.50375  .0824  L
s
P
p
.001  w
.5  .12361  m
.50375  .12361  L
s
P
p
.001  w
.5  .14421  m
.50375  .14421  L
s
P
p
.001  w
.5  .16481  m
.50375  .16481  L
s
P
p
.001  w
.5  .18541  m
.50375  .18541  L
s
P
p
.001  w
.5  .22661  m
.50375  .22661  L
s
P
p
.001  w
.5  .24721  m
.50375  .24721  L
s
P
p
.001  w
.5  .26781  m
.50375  .26781  L
s
P
p
.001  w
.5  .28842  m
.50375  .28842  L
s
P
p
.001  w
.5  .32962  m
.50375  .32962  L
s
P
p
.001  w
.5  .35022  m
.50375  .35022  L
s
P
p
.001  w
.5  .37082  m
.50375  .37082  L
s
P
p
.001  w
.5  .39142  m
.50375  .39142  L
s
P
p
.001  w
.5  .43262  m
.50375  .43262  L
s
P
p
.001  w
.5  .45322  m
.50375  .45322  L
s
P
p
.001  w
.5  .47383  m
.50375  .47383  L
s
P
p
.001  w
.5  .49443  m
.50375  .49443  L
s
P
p
.001  w
.5  .53563  m
.50375  .53563  L
s
P
p
.001  w
.5  .55623  m
.50375  .55623  L
s
P
p
.001  w
.5  .57683  m
.50375  .57683  L
s
P
p
.001  w
.5  .59743  m
.50375  .59743  L
s
P
p
.002  w
.5  0 m
.5  .61803  L
s
P
P
0 0 m
1 0 L
1 .61803  L
0 .61803  L
closepath
clip
newpath
p
p
p
p
.004  w
.2764  .31036  m
.27669  .3179  L
.27698  .32149  L
.27756  .32657  L
.27815  .33046  L
.27873  .33371  L
.28106  .34364  L
.28339  .35108  L
.28572  .35719  L
.29038  .36705  L
.29503  .37492  L
.30435  .38701  L
.31367  .39592  L
.32298  .40263  L
.3323  .40767  L
.33696  .40965  L
.34162  .41133  L
.34628  .41271  L
.35093  .41382  L
.35559  .41468  L
.35792  .41502  L
.36025  .41529  L
.36258  .41552  L
.36374  .41561  L
.36491  .41568  L
.36607  .41574  L
.36724  .41579  L
.36782  .41581  L
.3684  .41583  L
.36898  .41584  L
.36928  .41584  L
.36957  .41585  L
.36986  .41585  L
.37015  .41585  L
.37044  .41586  L
.37073  .41586  L
.37102  .41586  L
.37131  .41586  L
.3716  .41585  L
.3719  .41585  L
.37219  .41585  L
.37248  .41584  L
.37306  .41583  L
.37364  .41582  L
.37423  .4158  L
.37539  .41576  L
.37655  .41571  L
.37888  .41556  L
.38121  .41536  L
.38354  .41511  L
Mistroke
.3882  .41447  L
.39286  .41365  L
.39752  .41264  L
.40683  .41007  L
.41615  .40678  L
.42547  .40276  L
.43478  .39798  L
.4441  .39239  L
.45342  .38589  L
.46273  .37834  L
.47205  .36942  L
.48137  .35856  L
.48602  .35198  L
.49068  .34414  L
.49301  .33944  L
.49534  .33387  L
.49651  .33054  L
.49767  .32659  L
.49825  .32424  L
.49884  .32144  L
.49913  .31978  L
.49942  .3178  L
.49971  .31523  L
.5  .30902  L
Mfstroke
P
P
p
p
.004  w
.2764  .30767  m
.27669  .30014  L
.27698  .29654  L
.27756  .29146  L
.27815  .28758  L
.27873  .28432  L
.28106  .27439  L
.28339  .26696  L
.28572  .26084  L
.29038  .25098  L
.29503  .24311  L
.30435  .23102  L
.31367  .22211  L
.32298  .2154  L
.3323  .21037  L
.33696  .20838  L
.34162  .20671  L
.34628  .20532  L
.35093  .20421  L
.35559  .20336  L
.35792  .20302  L
.36025  .20274  L
.36258  .20252  L
.36374  .20243  L
.36491  .20235  L
.36607  .20229  L
.36724  .20224  L
.36782  .20222  L
.3684  .20221  L
.36898  .2022  L
.36928  .20219  L
.36957  .20219  L
.36986  .20218  L
.37015  .20218  L
.37044  .20218  L
.37073  .20218  L
.37102  .20218  L
.37131  .20218  L
.3716  .20218  L
.3719  .20218  L
.37219  .20219  L
.37248  .20219  L
.37306  .2022  L
.37364  .20221  L
.37423  .20223  L
.37539  .20227  L
.37655  .20233  L
.37888  .20248  L
.38121  .20268  L
.38354  .20292  L
Mistroke
.3882  .20356  L
.39286  .20439  L
.39752  .2054  L
.40683  .20797  L
.41615  .21126  L
.42547  .21528  L
.43478  .22006  L
.4441  .22565  L
.45342  .23214  L
.46273  .2397  L
.47205  .24861  L
.48137  .25948  L
.48602  .26605  L
.49068  .2739  L
.49301  .27859  L
.49534  .28417  L
.49651  .28749  L
.49767  .29144  L
.49825  .2938  L
.49884  .29659  L
.49913  .29825  L
.49942  .30023  L
.49971  .3028  L
.5  .30902  L
Mfstroke
P
P
P
p
p
p
.004  w
.7237  .31399  m
.72386  .31729  L
.72403  .31961  L
.72436  .32317  L
.72502  .32844  L
.72567  .33259  L
.72633  .33615  L
.72896  .34738  L
.73423  .36397  L
.73949  .37737  L
.74475  .3892  L
.75001  .40009  L
.75527  .41035  L
.76054  .42018  L
.7658  .42968  L
.77106  .43893  L
.77633  .448  L
.78159  .45693  L
.78685  .46574  L
.79211  .47447  L
.79738  .48313  L
.80264  .49174  L
.8079  .5003  L
.81316  .50885  L
.81843  .51737  L
.82369  .52588  L
.82895  .53438  L
.83421  .54289  L
.83947  .5514  L
.84474  .55992  L
.85  .56846  L
s
P
P
p
p
.004  w
.7237  .30404  m
.72386  .30074  L
.72403  .29842  L
.72436  .29487  L
.72502  .28959  L
.72567  .28544  L
.72633  .28189  L
.72896  .27065  L
.73423  .25406  L
.73949  .24067  L
.74475  .22884  L
.75001  .21795  L
.75527  .20768  L
.76054  .19786  L
.7658  .18836  L
.77106  .1791  L
.77633  .17003  L
.78159  .1611  L
.78685  .15229  L
.79211  .14356  L
.79738  .1349  L
.80264  .1263  L
.8079  .11773  L
.81316  .10919  L
.81843  .10067  L
.82369  .09216  L
.82895  .08365  L
.83421  .07515  L
.83947  .06663  L
.84474  .05811  L
.85  .04958  L
s
P
P
P
P
% End of Graphics
MathPictureEnd
end
