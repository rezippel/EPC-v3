%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 288 288
%%Creator: Mathematica
%%CreationDate: Mon Oct 12 15:05:58 EDT 1992
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: 1 
MathPictureStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0833333 0.5 0.0833333 [
[(-6)] 0 .5  0 2 Msboxa
[(-4)] .16667  .5  0 2 Msboxa
[(-2)] .33333  .5  0 2 Msboxa
[(2)] .66667  .5  0 2 Msboxa
[(4)] .83333  .5  0 2 Msboxa
[(6)] 1 .5  0 2 Msboxa
[(-6)] .4875  0 1 0 Msboxa
[(-4)] .4875  .16667  1 0 Msboxa
[(-2)] .4875  .33333  1 0 Msboxa
[(2)] .4875  .66667  1 0 Msboxa
[(4)] .4875  .83333  1 0 Msboxa
[(6)] .4875  1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002  w
0 .5  m
0 .50625  L
s
P
[(-6)] 0 .5  0 2 Mshowa
p
.002  w
.16667  .5  m
.16667  .50625  L
s
P
[(-4)] .16667  .5  0 2 Mshowa
p
.002  w
.33333  .5  m
.33333  .50625  L
s
P
[(-2)] .33333  .5  0 2 Mshowa
p
.002  w
.66667  .5  m
.66667  .50625  L
s
P
[(2)] .66667  .5  0 2 Mshowa
p
.002  w
.83333  .5  m
.83333  .50625  L
s
P
[(4)] .83333  .5  0 2 Mshowa
p
.002  w
1 .5  m
1 .50625  L
s
P
[(6)] 1 .5  0 2 Mshowa
p
.001  w
.03333  .5  m
.03333  .50375  L
s
P
p
.001  w
.06667  .5  m
.06667  .50375  L
s
P
p
.001  w
.1  .5  m
.1  .50375  L
s
P
p
.001  w
.13333  .5  m
.13333  .50375  L
s
P
p
.001  w
.2  .5  m
.2  .50375  L
s
P
p
.001  w
.23333  .5  m
.23333  .50375  L
s
P
p
.001  w
.26667  .5  m
.26667  .50375  L
s
P
p
.001  w
.3  .5  m
.3  .50375  L
s
P
p
.001  w
.36667  .5  m
.36667  .50375  L
s
P
p
.001  w
.4  .5  m
.4  .50375  L
s
P
p
.001  w
.43333  .5  m
.43333  .50375  L
s
P
p
.001  w
.46667  .5  m
.46667  .50375  L
s
P
p
.001  w
.53333  .5  m
.53333  .50375  L
s
P
p
.001  w
.56667  .5  m
.56667  .50375  L
s
P
p
.001  w
.6  .5  m
.6  .50375  L
s
P
p
.001  w
.63333  .5  m
.63333  .50375  L
s
P
p
.001  w
.7  .5  m
.7  .50375  L
s
P
p
.001  w
.73333  .5  m
.73333  .50375  L
s
P
p
.001  w
.76667  .5  m
.76667  .50375  L
s
P
p
.001  w
.8  .5  m
.8  .50375  L
s
P
p
.001  w
.86667  .5  m
.86667  .50375  L
s
P
p
.001  w
.9  .5  m
.9  .50375  L
s
P
p
.001  w
.93333  .5  m
.93333  .50375  L
s
P
p
.001  w
.96667  .5  m
.96667  .50375  L
s
P
p
.002  w
0 .5  m
1 .5  L
s
P
p
.002  w
.5  0 m
.50625  0 L
s
P
[(-6)] .4875  0 1 0 Mshowa
p
.002  w
.5  .16667  m
.50625  .16667  L
s
P
[(-4)] .4875  .16667  1 0 Mshowa
p
.002  w
.5  .33333  m
.50625  .33333  L
s
P
[(-2)] .4875  .33333  1 0 Mshowa
p
.002  w
.5  .66667  m
.50625  .66667  L
s
P
[(2)] .4875  .66667  1 0 Mshowa
p
.002  w
.5  .83333  m
.50625  .83333  L
s
P
[(4)] .4875  .83333  1 0 Mshowa
p
.002  w
.5  1 m
.50625  1 L
s
P
[(6)] .4875  1 1 0 Mshowa
p
.001  w
.5  .03333  m
.50375  .03333  L
s
P
p
.001  w
.5  .06667  m
.50375  .06667  L
s
P
p
.001  w
.5  .1  m
.50375  .1  L
s
P
p
.001  w
.5  .13333  m
.50375  .13333  L
s
P
p
.001  w
.5  .2  m
.50375  .2  L
s
P
p
.001  w
.5  .23333  m
.50375  .23333  L
s
P
p
.001  w
.5  .26667  m
.50375  .26667  L
s
P
p
.001  w
.5  .3  m
.50375  .3  L
s
P
p
.001  w
.5  .36667  m
.50375  .36667  L
s
P
p
.001  w
.5  .4  m
.50375  .4  L
s
P
p
.001  w
.5  .43333  m
.50375  .43333  L
s
P
p
.001  w
.5  .46667  m
.50375  .46667  L
s
P
p
.001  w
.5  .53333  m
.50375  .53333  L
s
P
p
.001  w
.5  .56667  m
.50375  .56667  L
s
P
p
.001  w
.5  .6  m
.50375  .6  L
s
P
p
.001  w
.5  .63333  m
.50375  .63333  L
s
P
p
.001  w
.5  .7  m
.50375  .7  L
s
P
p
.001  w
.5  .73333  m
.50375  .73333  L
s
P
p
.001  w
.5  .76667  m
.50375  .76667  L
s
P
p
.001  w
.5  .8  m
.50375  .8  L
s
P
p
.001  w
.5  .86667  m
.50375  .86667  L
s
P
p
.001  w
.5  .9  m
.50375  .9  L
s
P
p
.001  w
.5  .93333  m
.50375  .93333  L
s
P
p
.001  w
.5  .96667  m
.50375  .96667  L
s
P
p
.002  w
.5  0 m
.5  1 L
s
P
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
p
.004  w
.08333  .5  m
.08442  .53005  L
.0855  .54247  L
.08767  .55998  L
.08984  .57337  L
.09201  .58461  L
.10069  .61902  L
.10938  .64499  L
.11806  .66652  L
.15278  .73032  L
.1875  .7756  L
.22222  .81056  L
.25694  .83843  L
.29167  .86084  L
.32639  .87877  L
.36111  .89284  L
.37847  .89855  L
.39583  .90344  L
.41319  .90752  L
.43056  .91084  L
.44792  .9134  L
.4566  .9144  L
.46528  .91522  L
.47396  .91585  L
.4783  .9161  L
.48264  .9163  L
.48698  .91646  L
.48915  .91653  L
.49132  .91658  L
.49349  .91662  L
.49457  .91663  L
.49566  .91664  L
.49674  .91665  L
.49783  .91666  L
.49891  .91667  L
.5  .91667  L
.50109  .91667  L
.50217  .91666  L
.50326  .91665  L
.50434  .91664  L
.50651  .91662  L
.50868  .91658  L
.51085  .91653  L
.51302  .91646  L
.51736  .9163  L
.5217  .9161  L
.52604  .91585  L
.53472  .91522  L
.5434  .9144  L
.55208  .9134  L
Mistroke
.56944  .91084  L
.58681  .90752  L
.60417  .90344  L
.63889  .89284  L
.67361  .87877  L
.70833  .86084  L
.74306  .83843  L
.77778  .81056  L
.8125  .7756  L
.84722  .73032  L
.86458  .70172  L
.88194  .66652  L
.89063  .64499  L
.89931  .61902  L
.90365  .60335  L
.90799  .58461  L
.91016  .57337  L
.91233  .55998  L
.91341  .55198  L
.9145  .54247  L
.91558  .53005  L
.91667  .5  L
Mfstroke
P
P
p
p
.004  w
.08333  .5  m
.08442  .46995  L
.0855  .45753  L
.08767  .44002  L
.08984  .42663  L
.09201  .41539  L
.10069  .38098  L
.10938  .35501  L
.11806  .33348  L
.15278  .26968  L
.1875  .2244  L
.22222  .18944  L
.25694  .16157  L
.29167  .13916  L
.32639  .12123  L
.36111  .10716  L
.37847  .10145  L
.39583  .09656  L
.41319  .09248  L
.43056  .08916  L
.44792  .0866  L
.4566  .0856  L
.46528  .08478  L
.47396  .08415  L
.4783  .0839  L
.48264  .0837  L
.48698  .08354  L
.48915  .08347  L
.49132  .08342  L
.49349  .08338  L
.49457  .08337  L
.49566  .08336  L
.49674  .08335  L
.49783  .08334  L
.49891  .08333  L
.5  .08333  L
.50109  .08333  L
.50217  .08334  L
.50326  .08335  L
.50434  .08336  L
.50651  .08338  L
.50868  .08342  L
.51085  .08347  L
.51302  .08354  L
.51736  .0837  L
.5217  .0839  L
.52604  .08415  L
.53472  .08478  L
.5434  .0856  L
.55208  .0866  L
Mistroke
.56944  .08916  L
.58681  .09248  L
.60417  .09656  L
.63889  .10716  L
.67361  .12123  L
.70833  .13916  L
.74306  .16157  L
.77778  .18944  L
.8125  .2244  L
.84722  .26968  L
.86458  .29828  L
.88194  .33348  L
.89063  .35501  L
.89931  .38098  L
.90365  .39665  L
.90799  .41539  L
.91016  .42663  L
.91233  .44002  L
.91341  .44802  L
.9145  .45753  L
.91558  .46995  L
.91667  .5  L
Mfstroke
P
P
P
p
p
.004  w
0 .33333  m
.04167  .35417  L
.08333  .375  L
.125  .39583  L
.16667  .41667  L
.20833  .4375  L
.25  .45833  L
.29167  .47917  L
.33333  .5  L
.375  .52083  L
.41667  .54167  L
.45833  .5625  L
.5  .58333  L
.54167  .60417  L
.58333  .625  L
.625  .64583  L
.66667  .66667  L
.70833  .6875  L
.75  .70833  L
.79167  .72917  L
.83333  .75  L
.875  .77083  L
.91667  .79167  L
.95833  .8125  L
1 .83333  L
s
P
P
P
% End of Graphics
MathPictureEnd
end
